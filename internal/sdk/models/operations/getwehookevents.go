// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-webhook/internal/sdk/models/shared"
	"net/http"
)

// Status - Get all events for a given webhook config id
type Status string

const (
	StatusSucceeded  Status = "succeeded"
	StatusFailed     Status = "failed"
	StatusInProgress Status = "in_progress"
)

func (e Status) ToPointer() *Status {
	return &e
}
func (e *Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "succeeded":
		fallthrough
	case "failed":
		fallthrough
	case "in_progress":
		*e = Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status: %v", v)
	}
}

type GetWehookEventsRequest struct {
	// Short uuid to identify the webhook configuration.
	ConfigID string `pathParam:"style=simple,explode=false,name=configId"`
	// Base64 encoded cursor to be used for pagination
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Get all events for a given webhook config id
	Status *Status `queryParam:"style=form,explode=true,name=status"`
}

func (o *GetWehookEventsRequest) GetConfigID() string {
	if o == nil {
		return ""
	}
	return o.ConfigID
}

func (o *GetWehookEventsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetWehookEventsRequest) GetStatus() *Status {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetWehookEventsResponseBody - Success - list events
type GetWehookEventsResponseBody struct {
	// Cursor to be used for pagination
	Cursor *string               `json:"cursor,omitempty"`
	Data   []shared.WebhookEvent `json:"data,omitempty"`
}

func (o *GetWehookEventsResponseBody) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetWehookEventsResponseBody) GetData() []shared.WebhookEvent {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetWehookEventsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// No events found
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success - list events
	Object *GetWehookEventsResponseBody
}

func (o *GetWehookEventsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetWehookEventsResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *GetWehookEventsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetWehookEventsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetWehookEventsResponse) GetObject() *GetWehookEventsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
