// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-webhook/internal/sdk/models/shared"
	"net/http"
)

type UploadFileV2Request struct {
	UploadFilePayload *shared.UploadFilePayload `request:"mediaType=application/json"`
	// Use this parameter when uploading a file directly to an existing file entity.
	//
	// Note: still requires calling saveFileV2 to save the file permanently.
	//
	FileEntityID *string `queryParam:"style=form,explode=true,name=file_entity_id"`
}

func (o *UploadFileV2Request) GetUploadFilePayload() *shared.UploadFilePayload {
	if o == nil {
		return nil
	}
	return o.UploadFilePayload
}

func (o *UploadFileV2Request) GetFileEntityID() *string {
	if o == nil {
		return nil
	}
	return o.FileEntityID
}

type UploadFileV2Response struct {
	// HTTP response content type for this operation
	ContentType string
	// Pre-signed URL for POST / PUT upload
	FileUpload *shared.FileUpload
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UploadFileV2Response) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UploadFileV2Response) GetFileUpload() *shared.FileUpload {
	if o == nil {
		return nil
	}
	return o.FileUpload
}

func (o *UploadFileV2Response) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UploadFileV2Response) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
