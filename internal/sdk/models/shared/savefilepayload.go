// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-webhook/internal/sdk/internal/utils"
)

type SaveFilePayloadType string

const (
	SaveFilePayloadTypeSaveS3FilePayload            SaveFilePayloadType = "SaveS3FilePayload"
	SaveFilePayloadTypeSaveFileFromSourceURLPayload SaveFilePayloadType = "SaveFileFromSourceURLPayload"
	SaveFilePayloadTypeSaveCustomFilePayload        SaveFilePayloadType = "SaveCustomFilePayload"
)

type SaveFilePayload struct {
	SaveS3FilePayload            *SaveS3FilePayload
	SaveFileFromSourceURLPayload *SaveFileFromSourceURLPayload
	SaveCustomFilePayload        *SaveCustomFilePayload

	Type SaveFilePayloadType
}

func CreateSaveFilePayloadSaveS3FilePayload(saveS3FilePayload SaveS3FilePayload) SaveFilePayload {
	typ := SaveFilePayloadTypeSaveS3FilePayload

	return SaveFilePayload{
		SaveS3FilePayload: &saveS3FilePayload,
		Type:              typ,
	}
}

func CreateSaveFilePayloadSaveFileFromSourceURLPayload(saveFileFromSourceURLPayload SaveFileFromSourceURLPayload) SaveFilePayload {
	typ := SaveFilePayloadTypeSaveFileFromSourceURLPayload

	return SaveFilePayload{
		SaveFileFromSourceURLPayload: &saveFileFromSourceURLPayload,
		Type:                         typ,
	}
}

func CreateSaveFilePayloadSaveCustomFilePayload(saveCustomFilePayload SaveCustomFilePayload) SaveFilePayload {
	typ := SaveFilePayloadTypeSaveCustomFilePayload

	return SaveFilePayload{
		SaveCustomFilePayload: &saveCustomFilePayload,
		Type:                  typ,
	}
}

func (u *SaveFilePayload) UnmarshalJSON(data []byte) error {

	var saveCustomFilePayload SaveCustomFilePayload = SaveCustomFilePayload{}
	if err := utils.UnmarshalJSON(data, &saveCustomFilePayload, "", true, true); err == nil {
		u.SaveCustomFilePayload = &saveCustomFilePayload
		u.Type = SaveFilePayloadTypeSaveCustomFilePayload
		return nil
	}

	var saveS3FilePayload SaveS3FilePayload = SaveS3FilePayload{}
	if err := utils.UnmarshalJSON(data, &saveS3FilePayload, "", true, true); err == nil {
		u.SaveS3FilePayload = &saveS3FilePayload
		u.Type = SaveFilePayloadTypeSaveS3FilePayload
		return nil
	}

	var saveFileFromSourceURLPayload SaveFileFromSourceURLPayload = SaveFileFromSourceURLPayload{}
	if err := utils.UnmarshalJSON(data, &saveFileFromSourceURLPayload, "", true, true); err == nil {
		u.SaveFileFromSourceURLPayload = &saveFileFromSourceURLPayload
		u.Type = SaveFilePayloadTypeSaveFileFromSourceURLPayload
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SaveFilePayload", string(data))
}

func (u SaveFilePayload) MarshalJSON() ([]byte, error) {
	if u.SaveS3FilePayload != nil {
		return utils.MarshalJSON(u.SaveS3FilePayload, "", true)
	}

	if u.SaveFileFromSourceURLPayload != nil {
		return utils.MarshalJSON(u.SaveFileFromSourceURLPayload, "", true)
	}

	if u.SaveCustomFilePayload != nil {
		return utils.MarshalJSON(u.SaveCustomFilePayload, "", true)
	}

	return nil, errors.New("could not marshal union type SaveFilePayload: all fields are null")
}
