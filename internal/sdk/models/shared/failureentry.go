// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// Payload - Contains the metadata about the configured event
type Payload struct {
}

// FailureEntry - Failures stored in the database.
type FailureEntry struct {
	// Time of event creation
	CreationTimestamp *string `json:"creationTimestamp,omitempty"`
	ErrorCode         *string `json:"errorCode,omitempty"`
	// The error message encountered during webhook delivery
	ErrorPayload *string `json:"errorPayload,omitempty"`
	// ID of event. Unique
	EventID *string `json:"eventId,omitempty"`
	// Name for identifying the event. Unique.
	EventName *string `json:"eventName,omitempty"`
	// The ID of the given organization
	OrgID *string `json:"orgId,omitempty"`
	// Contains the metadata about the configured event
	Payload *Payload `json:"payload,omitempty"`
	// destination url of configured webhook
	URL *string `json:"url,omitempty"`
	// The ID of the webhook configuration
	WebhookConfigID *string `json:"webhookConfigId,omitempty"`
}

func (o *FailureEntry) GetCreationTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.CreationTimestamp
}

func (o *FailureEntry) GetErrorCode() *string {
	if o == nil {
		return nil
	}
	return o.ErrorCode
}

func (o *FailureEntry) GetErrorPayload() *string {
	if o == nil {
		return nil
	}
	return o.ErrorPayload
}

func (o *FailureEntry) GetEventID() *string {
	if o == nil {
		return nil
	}
	return o.EventID
}

func (o *FailureEntry) GetEventName() *string {
	if o == nil {
		return nil
	}
	return o.EventName
}

func (o *FailureEntry) GetOrgID() *string {
	if o == nil {
		return nil
	}
	return o.OrgID
}

func (o *FailureEntry) GetPayload() *Payload {
	if o == nil {
		return nil
	}
	return o.Payload
}

func (o *FailureEntry) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *FailureEntry) GetWebhookConfigID() *string {
	if o == nil {
		return nil
	}
	return o.WebhookConfigID
}
