// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-webhook/internal/sdk/internal/utils"
	"net/http"
)

type DownloadS3FileRequest struct {
	// Controls the Content-Disposition header to control browser behaviour. Set to true to trigger download.
	Attachment *bool  `default:"true" queryParam:"style=form,explode=true,name=attachment"`
	S3Bucket   string `queryParam:"style=form,explode=true,name=s3_bucket"`
	S3Key      string `queryParam:"style=form,explode=true,name=s3_key"`
}

func (d DownloadS3FileRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DownloadS3FileRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DownloadS3FileRequest) GetAttachment() *bool {
	if o == nil {
		return nil
	}
	return o.Attachment
}

func (o *DownloadS3FileRequest) GetS3Bucket() string {
	if o == nil {
		return ""
	}
	return o.S3Bucket
}

func (o *DownloadS3FileRequest) GetS3Key() string {
	if o == nil {
		return ""
	}
	return o.S3Key
}

// DownloadS3FileResponseBody - Generated thumbnail image
type DownloadS3FileResponseBody struct {
	DownloadURL *string `json:"download_url,omitempty"`
}

func (o *DownloadS3FileResponseBody) GetDownloadURL() *string {
	if o == nil {
		return nil
	}
	return o.DownloadURL
}

type DownloadS3FileResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Generated thumbnail image
	Object *DownloadS3FileResponseBody
}

func (o *DownloadS3FileResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DownloadS3FileResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DownloadS3FileResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DownloadS3FileResponse) GetObject() *DownloadS3FileResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
