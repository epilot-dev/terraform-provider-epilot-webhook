// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-webhook/internal/sdk/internal/utils"
	"net/http"
)

type PreviewPublicFileRequest struct {
	// height
	H  *int64 `queryParam:"style=form,explode=true,name=h"`
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Org id
	OrgID *string `queryParam:"style=form,explode=true,name=org_id"`
	// index of file version
	Version *int64 `default:"0" queryParam:"style=form,explode=true,name=version"`
	// width
	W *int64 `queryParam:"style=form,explode=true,name=w"`
}

func (p PreviewPublicFileRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PreviewPublicFileRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PreviewPublicFileRequest) GetH() *int64 {
	if o == nil {
		return nil
	}
	return o.H
}

func (o *PreviewPublicFileRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PreviewPublicFileRequest) GetOrgID() *string {
	if o == nil {
		return nil
	}
	return o.OrgID
}

func (o *PreviewPublicFileRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *PreviewPublicFileRequest) GetW() *int64 {
	if o == nil {
		return nil
	}
	return o.W
}

type PreviewPublicFileResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PreviewPublicFileResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PreviewPublicFileResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PreviewPublicFileResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
