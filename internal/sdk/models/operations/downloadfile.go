// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-webhook/internal/sdk/internal/utils"
	"net/http"
)

type DownloadFileRequest struct {
	// Controls the Content-Disposition header to control browser behaviour. Set to true to trigger download.
	Attachment *bool  `default:"true" queryParam:"style=form,explode=true,name=attachment"`
	ID         string `pathParam:"style=simple,explode=false,name=id"`
	// index of file version
	Version *int64 `default:"0" queryParam:"style=form,explode=true,name=version"`
}

func (d DownloadFileRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DownloadFileRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DownloadFileRequest) GetAttachment() *bool {
	if o == nil {
		return nil
	}
	return o.Attachment
}

func (o *DownloadFileRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DownloadFileRequest) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// DownloadFileResponseBody - Generated thumbnail image
type DownloadFileResponseBody struct {
	DownloadURL *string `json:"download_url,omitempty"`
}

func (o *DownloadFileResponseBody) GetDownloadURL() *string {
	if o == nil {
		return nil
	}
	return o.DownloadURL
}

type DownloadFileResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Generated thumbnail image
	Object *DownloadFileResponseBody
}

func (o *DownloadFileResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DownloadFileResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DownloadFileResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DownloadFileResponse) GetObject() *DownloadFileResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
