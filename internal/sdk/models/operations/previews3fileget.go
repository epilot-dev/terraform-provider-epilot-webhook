// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PreviewS3FileGetRequest struct {
	// s3 bucket
	Bucket string `queryParam:"style=form,explode=true,name=bucket"`
	// height
	H *int64 `queryParam:"style=form,explode=true,name=h"`
	// s3 key
	Key string `queryParam:"style=form,explode=true,name=key"`
	// width
	W *int64 `queryParam:"style=form,explode=true,name=w"`
}

func (o *PreviewS3FileGetRequest) GetBucket() string {
	if o == nil {
		return ""
	}
	return o.Bucket
}

func (o *PreviewS3FileGetRequest) GetH() *int64 {
	if o == nil {
		return nil
	}
	return o.H
}

func (o *PreviewS3FileGetRequest) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *PreviewS3FileGetRequest) GetW() *int64 {
	if o == nil {
		return nil
	}
	return o.W
}

type PreviewS3FileGetResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PreviewS3FileGetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PreviewS3FileGetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PreviewS3FileGetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
