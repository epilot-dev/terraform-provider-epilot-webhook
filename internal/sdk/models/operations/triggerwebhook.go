// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-webhook/internal/sdk/models/shared"
	"net/http"
)

type TriggerWebhookRequest struct {
	// Webhook payload
	ExecutionPayload shared.ExecutionPayload `request:"mediaType=application/json"`
	// Short uuid to identify the webhook configuration.
	ConfigID string `pathParam:"style=simple,explode=false,name=configId"`
	// If set to true, the webhook will be triggered synchronously. Otherwise, it will be triggered asynchronously.
	Sync *bool `queryParam:"style=form,explode=true,name=sync"`
}

func (o *TriggerWebhookRequest) GetExecutionPayload() shared.ExecutionPayload {
	if o == nil {
		return shared.ExecutionPayload{}
	}
	return o.ExecutionPayload
}

func (o *TriggerWebhookRequest) GetConfigID() string {
	if o == nil {
		return ""
	}
	return o.ConfigID
}

func (o *TriggerWebhookRequest) GetSync() *bool {
	if o == nil {
		return nil
	}
	return o.Sync
}

type TriggerWebhookResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Validation Errors
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success - if the webhook is triggered successfully
	TriggerWebhookResp *shared.TriggerWebhookResp
}

func (o *TriggerWebhookResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TriggerWebhookResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *TriggerWebhookResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TriggerWebhookResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TriggerWebhookResponse) GetTriggerWebhookResp() *shared.TriggerWebhookResp {
	if o == nil {
		return nil
	}
	return o.TriggerWebhookResp
}
